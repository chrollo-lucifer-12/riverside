generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                 Int                 @id @default(autoincrement())
  email              String              @unique
  password           String?
  name               String
  emailVerified      DateTime?
  sessions           Session[]
  verificationTokens VerificationToken[]
  googleId           String?             @unique
  studio             Studio?
}

model Session {
  id        String   @id
  userId    Int
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model VerificationToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Studio {
  id       String    @id @default(uuid())
  slug     String    @unique
  owner    User      @relation(references: [id], fields: [ownerId])
  ownerId  Int       @unique
  projects Project[]
}

model Project {
  id       String  @id @default(uuid())
  name     String
  studioId String
  studio   Studio  @relation(references: [id], fields: [studioId])
  medias   Media[]
}

model Media {
  id           String        @id @default(uuid())
  type         MediaType
  project      Project       @relation(fields: [projectId], references: [id])
  projectId    String
  isProcessing Boolean
  createdAt    DateTime      @default(now())
  metadata     Metadata?
  videoAssets  VideoAssets[]
}

model Metadata {
  id          String   @id @default(uuid())
  video       Media    @relation(fields: [mediaId], references: [id])
  mediaId     String   @unique
  filename    String?
  duration    Decimal?
  preview_url String?
  full_url    String?
  createdAt   DateTime @default(now())
}

model VideoAssets {
  id        String    @id @default(uuid())
  type      MediaType
  url       String?
  createdAt DateTime  @default(now())
  mediaId   String
  video     Media     @relation(fields: [mediaId], references: [id])
}

enum MediaType {
  AUDIO
  VIDEO
}
